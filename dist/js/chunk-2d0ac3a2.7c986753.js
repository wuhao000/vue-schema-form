(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0ac3a2"],{1948:function(e,t,c){"use strict";c.r(t);var o=c("8bbf"),r={class:"markdown-body"},n=Object(o["createElementVNode"])("h1",{id:"form-schema-扩展规范"},"Form Schema 扩展规范",-1),d=Object(o["createElementVNode"])("h2",{id:"背景"},"背景",-1),a=Object(o["createElementVNode"])("p",null,[Object(o["createTextVNode"])("通常使用type来描述组件类型，但是组件类型我们通常命名为数据的类型，如果一个数据类型想要使用不同的输入组件时，可以通过"),Object(o["createElementVNode"])("code",null,"xType"),Object(o["createTextVNode"])("来指定")],-1),l=Object(o["createElementVNode"])("p",null,[Object(o["createTextVNode"])("例如："),Object(o["createElementVNode"])("code",null,"boolean"),Object(o["createTextVNode"])(" 类型通常对应的是"),Object(o["createElementVNode"])("code",null,"Switch"),Object(o["createTextVNode"])("组件，但是如果想要使用复选框来作为输入组件时，就可以按如下内容配置：")],-1),b=Object(o["createTextVNode"])(' { "type": "boolean", "xType": "checkbox" } '),j=Object(o["createElementVNode"])("h2",{id:"表单校验描述"},"表单校验描述",-1),O=Object(o["createElementVNode"])("p",null,[Object(o["createTextVNode"])("在表单场景中，校验是必不可少的，同样，为了描述字段的校验规则，我们使用"),Object(o["createElementVNode"])("code",null,"rules"),Object(o["createTextVNode"])("来描述字段的校验规则：")],-1),u=Object(o["createTextVNode"])(' { "type": "string", "rules": [ { "pattern": "\\\\d+", "message": "必须是数字" } ] } '),p=Object(o["createElementVNode"])("h2",{id:"表单组件属性描述"},"表单组件属性描述",-1),m=Object(o["createElementVNode"])("p",null,[Object(o["createTextVNode"])("每个表单组件其实都会有自己的一套属性，有控制交互行为的，也有控制样式的，所以我们使用 "),Object(o["createElementVNode"])("code",null,"props"),Object(o["createTextVNode"])(" 来给传递给具体的表单 UI 组件：")],-1),s=Object(o["createTextVNode"])(' { "type": "select", "props": { "multiple": true } } '),N=Object(o["createElementVNode"])("h2",{id:"表单字段顺序描述"},"表单字段顺序描述",-1),V=Object(o["createElementVNode"])("p",null,"因为 JSON Schema 描述对象型数据结构同样是使用对象结构来描述，但是想要映射到 UI 界面上，就会存在一个显示顺序的问题，对象 key 是无序的，所以，我们就扩展了 x-index 来控制字段顺序：",-1),i=Object(o["createTextVNode"])(' { "type": "object", "properties": { "aa": { "type": "string", "x-rules": [ { "pattern": "\\\\d+", "message": "必须是数字" } ], "x-props": { "multiple": true }, "x-index": 1 }, "bb": { "type": "string", "x-rules": [ { "pattern": "\\\\d+", "message": "必须是数字" } ], "x-props": { "multiple": true }, "x-index": 0 } } } ');function x(e,t){var c=Object(o["resolveComponent"])("code-editor");return Object(o["openBlock"])(),Object(o["createElementBlock"])("div",r,[n,d,a,l,Object(o["createVNode"])(c,{mode:"json"},{default:Object(o["withCtx"])((function(){return[b]})),_:1}),j,O,Object(o["createVNode"])(c,{mode:"json"},{default:Object(o["withCtx"])((function(){return[u]})),_:1}),p,m,Object(o["createVNode"])(c,{mode:"json"},{default:Object(o["withCtx"])((function(){return[s]})),_:1}),N,V,Object(o["createVNode"])(c,{mode:"json"},{default:Object(o["withCtx"])((function(){return[i]})),_:1})])}var h=c("6b0d"),E=c.n(h);const T={},f=E()(T,[["render",x]]);t["default"]=f}}]);
//# sourceMappingURL=chunk-2d0ac3a2.7c986753.js.map