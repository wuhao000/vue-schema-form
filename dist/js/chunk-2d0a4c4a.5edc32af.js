(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0a4c4a"],{"089e":function(e,t,n){"use strict";n.r(t);var r=n("8bbf");function p(e,t,n,p,o,l){var i=Object(r["resolveComponent"])("v-schema-form");return Object(r["openBlock"])(),Object(r["createElementBlock"])("div",null,[Object(r["createVNode"])(i,{schema:p.schema,effects:p.effects,onOk:p.onOk,onCancel:p.onCancel},null,8,["schema","effects","onOk","onCancel"])])}var o=n("98ce");Object(o["j"])();var l={name:"StepsLayoutDemo",setup:function(){return{onCancel:function(){console.log("cancel")},onOk:function(){console.log("ok")},effects:function(e){e("#steps").setFieldProps({currentStep:2})},schema:{props:{labelWidth:120,labelPosition:"left"},fields:[{type:"steps",id:"steps",layout:[4,4,1],props:{titles:["基本信息","高级设置","校验规则"]},fields:[{property:"nameGrid",type:"grid",layout:[12,12],fields:[{property:"name",required:!0,title:"中文名称",type:"string"}]},{type:"grid",property:"dataTypeGrid",layout:[12,12],fields:[{property:"collection",title:"集合",type:"boolean"}]},{fields:[{id:"displayField",property:"relatedEntityDisplayField",title:"用于显示的属性",type:"select"}],id:"relatedCard",layout:[12,12],property:"card2",type:"grid"},{enum:[{label:"百分比",value:"Percentage"},{label:"金额",value:"Money"},{label:"进度",value:"Progress"}],property:"options.numberValueType",title:"数值类型",type:"select",visible:!1},{property:"unit",title:"单位",type:"string"},{property:"options.defaultValue",slot:"defaultValue",title:"默认值"},{array:!0,property:"options.dependProperties",title:"关联的字段",type:"select"},{property:"placeholder",title:"提示信息",type:"string"},{fields:[{fields:[{fields:[{id:"required",property:"required",title:"是否必须",type:"boolean"},{id:"unique",property:"unique",title:"是否唯一",type:"boolean"},{id:"min",property:"min",title:"最小值",type:"number"},{id:"max",property:"max",title:"最大值",type:"number"},{id:"minLength",property:"minLength",title:"最小长度",type:"number"},{id:"maxLength",property:"maxLength",title:"最大长度",type:"number"}],layout:[12,12,12,12,12,12],property:"grid",type:"grid"},{id:"regexp",property:"regexp",title:"正则",type:"string"},{id:"validateScript",property:"validateScript",title:"校验脚本",type:"text"}],property:"validateRules",type:"object"}],property:"card3",props:{title:"校验规则"},type:"card"}]}]}}}},i=n("6b0d"),a=n.n(i);const d=a()(l,[["render",p]]);var s=d,c={class:"markdown-body"},y=Object(r["createTextVNode"])("\n"),u=Object(r["createTextVNode"])("\n"),m=Object(r["createTextVNode"])("\n  \n<template>\n  <div>\n    <v-schema-form\n        :schema=\"schema\"\n        :effects=\"effects\"\n        @ok=\"onOk\"\n        @cancel=\"onCancel\"/>\n  </div>\n</template>\n<script lang=\"ts\">\n  import {registerAntd} from '../../../schema-form';\n  import {EffectsContext} from '../../../../types';\n  \n  registerAntd();\n  export default {\n    name: 'StepsLayoutDemo',\n    setup() {\n      return {\n        onCancel: () => {\n          console.log('cancel');\n        },\n        onOk: () => {\n          console.log('ok');\n        },\n        effects: ($: EffectsContext) => {\n          $('#steps').setFieldProps({\n            currentStep: 2\n          });\n        },\n        schema: {\n          props: {\n            labelWidth: 120,\n            labelPosition: 'left'\n          },\n          fields: [{\n            type: 'steps',\n            id: 'steps',\n            layout: [4, 4, 1],\n            props: {\n              titles: ['基本信息', '高级设置', '校验规则']\n            },\n            fields: [\n              {\n                property: 'nameGrid',\n                type: 'grid',\n                layout: [12, 12],\n                fields: [\n                  {\n                    property: 'name',\n                    required: true,\n                    title: '中文名称',\n                    type: 'string'\n                  }\n                ]\n              },\n              {\n                type: 'grid',\n                property: 'dataTypeGrid',\n                layout: [12, 12],\n                fields: [\n                  {\n                    property: 'collection',\n                    title: '集合',\n                    type: 'boolean'\n                  }\n                ]\n              },\n              {\n                fields: [\n                  {\n                    id: 'displayField',\n                    property: 'relatedEntityDisplayField',\n                    title: '用于显示的属性',\n                    type: 'select'\n                  }\n                ],\n                id: 'relatedCard',\n                layout: [12, 12],\n                property: 'card2',\n                type: 'grid'\n              },\n              {\n                enum: [\n                  {label: '百分比', value: 'Percentage'},\n                  {label: '金额', value: 'Money'},\n                  {label: '进度', value: 'Progress'}\n                ],\n                property: 'options.numberValueType',\n                title: '数值类型',\n                type: 'select',\n                visible: false\n              },\n              {\n                property: 'unit',\n                title: '单位',\n                type: 'string'\n              },\n              {\n                property: 'options.defaultValue',\n                slot: 'defaultValue',\n                title: '默认值'\n              },\n              {\n                array: true,\n                property: 'options.dependProperties',\n                title: '关联的字段',\n                type: 'select'\n              },\n              {\n                property: 'placeholder',\n                title: '提示信息',\n                type: 'string'\n              },\n              {\n                fields: [\n                  {\n                    fields: [\n                      {\n                        fields: [\n                          {\n                            id: 'required',\n                            property: 'required',\n                            title: '是否必须',\n                            type: 'boolean'\n                          },\n                          {\n                            id: 'unique',\n                            property: 'unique',\n                            title: '是否唯一',\n                            type: 'boolean'\n                          },\n                          {\n                            id: 'min',\n                            property: 'min',\n                            title: '最小值',\n                            type: 'number'\n                          },\n                          {\n                            id: 'max',\n                            property: 'max',\n                            title: '最大值',\n                            type: 'number'\n                          },\n                          {\n                            id: 'minLength',\n                            property: 'minLength',\n                            title: '最小长度',\n                            type: 'number'\n                          },\n                          {\n                            id: 'maxLength',\n                            property: 'maxLength',\n                            title: '最大长度',\n                            type: 'number'\n                          }\n                        ],\n                        layout: [12, 12, 12, 12, 12, 12],\n                        property: 'grid',\n                        type: 'grid'\n                      },\n                      {\n                        id: 'regexp',\n                        property: 'regexp',\n                        title: '正则',\n                        type: 'string'\n                      },\n                      {\n                        id: 'validateScript',\n                        property: 'validateScript',\n                        title: '校验脚本',\n                        type: 'text'\n                      }\n                    ],\n                    property: 'validateRules',\n                    type: 'object'\n                  }\n                ],\n                property: 'card3',\n                props: {\n                  title: '校验规则'\n                },\n                type: 'card'\n              }\n            ]\n          }]\n        }\n      };\n    }\n  };\n<\/script>\n\n"),f=Object(r["createTextVNode"])("\n"),b=Object(r["defineComponent"])({setup:function(e){return function(e,t){var n=Object(r["resolveComponent"])("code-container"),p=Object(r["resolveComponent"])("demo-wrapper");return Object(r["openBlock"])(),Object(r["createElementBlock"])("div",c,[Object(r["createElementVNode"])("pre",null,[Object(r["createVNode"])(p,null,{code:Object(r["withCtx"])((function(){return[Object(r["createVNode"])(n,null,{default:Object(r["withCtx"])((function(){return[m]})),_:1})]})),default:Object(r["withCtx"])((function(){return[y,Object(r["createVNode"])(s),u,f]})),_:1})])])}}});const g=b;t["default"]=g}}]);
//# sourceMappingURL=chunk-2d0a4c4a.5edc32af.js.map