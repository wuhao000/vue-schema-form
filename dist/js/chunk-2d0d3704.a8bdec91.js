(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0d3704"],{"5d87":function(e,t,n){"use strict";n.r(t);var r=n("8bbf");function o(e,t,n,o,c,l){var a=Object(r["resolveComponent"])("v-schema-form");return Object(r["openBlock"])(),Object(r["createElementBlock"])("div",null,[Object(r["createVNode"])(a,{schema:c.schema},null,8,["schema"])])}var c=n("98ce");Object(c["k"])();var l={name:"GridLayoutDemo",data:function(){return{schema:{props:{labelPosition:"left"},fields:{$grid:{title:"高级选项",type:"grid",layout:[12,{span:10,push:2},6,12,6],props:{gutter:20},fields:{other:{title:"其他0",type:"string"},other2:{title:"其他2",type:"string"},other3:{title:"其他2",type:"string"},other4:{title:"其他2",type:"string"},other5:{title:"其他2",type:"string"}}}}}}}},a=n("6b0d"),i=n.n(a);const d=i()(l,[["render",o]]);var s=d;function p(e,t,n,o,c,l){var a=Object(r["resolveComponent"])("v-schema-form");return Object(r["openBlock"])(),Object(r["createElementBlock"])("div",null,[Object(r["createVNode"])(a,{schema:o.schema,effects:e.effects,onOk:o.onOk,onCancel:o.onCancel},null,8,["schema","effects","onOk","onCancel"])])}Object(c["k"])();var u={name:"StepsLayoutDemo",setup:function(){return{onCancel:function(){console.log("cancel")},onOk:function(){console.log("ok")},schema:{props:{labelWidth:120,labelPosition:"left"},fields:[{type:"steps",id:"steps",layout:[1,1,1],props:{titles:["基本信息","高级设置","校验规则"]},fields:[{property:"name",title:"名称",type:"string"},{property:"date",title:"日期",type:"date"},{property:"integer",title:"数值",type:"integer"}]}]}}}};const b=i()(u,[["render",p]]);var m=b,h={class:"markdown-body"},f=Object(r["createElementVNode"])("h1",{id:"内置布局组件"},"内置布局组件",-1),O=Object(r["createElementVNode"])("blockquote",null,[Object(r["createElementVNode"])("p",null,[Object(r["createTextVNode"])("布局类型同样使用"),Object(r["createElementVNode"])("code",null,"type"),Object(r["createTextVNode"])("来指定, 布局组件不会影响数据的层级 使用"),Object(r["createElementVNode"])("code",null,"layout"),Object(r["createTextVNode"])("属性（非必须）指定布局格式")])],-1),j=Object(r["createElementVNode"])("h2",{id:"grid-栅格布局"},"grid 栅格布局",-1),y=Object(r["createTextVNode"])("\n"),g=Object(r["createTextVNode"])("\n"),N=Object(r["createTextVNode"])("\n  <template>\n  <div>\n    <v-schema-form :schema=\"schema\"/>\n  </div>\n</template>\n<script lang=\"ts\">\n  import {registerAntd} from '../../schema-form';\n\n  registerAntd();\n  export default {\n    name: 'GridLayoutDemo',\n    data() {\n      return {\n        schema: {\n          props: {\n            labelPosition: 'left'\n          },\n          fields: {\n            $grid: {\n              title: '高级选项',\n              type: 'grid',\n              layout: [12, {\n                span: 10,\n                push: 2\n              }, 6, 12, 6],\n              props: {\n                gutter: 20\n              },\n              fields: {\n                other: {\n                  title: '其他0',\n                  type: 'string'\n                },\n                other2: {\n                  title: '其他2',\n                  type: 'string'\n                },\n                other3: {\n                  title: '其他2',\n                  type: 'string'\n                },\n                other4: {\n                  title: '其他2',\n                  type: 'string'\n                },\n                other5: {\n                  title: '其他2',\n                  type: 'string'\n                }\n              }\n            }\n          }\n        }\n      };\n    }\n  };\n<\/script>\n\n"),V=Object(r["createTextVNode"])("\n"),v=Object(r["createStaticVNode"])('<h2 id="steps-分步组件">steps 分步组件</h2><h3 id="组件属性">组件属性</h3><table><thead><tr><th>属性名称</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>layout</td><td>布局，整数数组，表示每个步骤包含的表单项数量，加起来总和和fields的数量保持一致</td><td>integer[]</td></tr><tr><td>currentStep</td><td>当前步骤</td><td>integer</td></tr><tr><td>titles</td><td>步骤名称,数组长度和步骤数一致</td><td>string[]</td></tr></tbody></table>',3),k=Object(r["createTextVNode"])("\n"),x=Object(r["createTextVNode"])("\n"),C=Object(r["createTextVNode"])("\n  <template>\n  <div>\n    <v-schema-form\n        :schema=\"schema\"\n        :effects=\"effects\"\n        @ok=\"onOk\"\n        @cancel=\"onCancel\"/>\n  </div>\n</template>\n<script lang=\"ts\">\n  import {registerAntd} from '../../schema-form';\n\n  registerAntd();\n  export default {\n    name: 'StepsLayoutDemo',\n    setup() {\n      return {\n        onCancel: () => {\n          console.log('cancel');\n        },\n        onOk: () => {\n          console.log('ok');\n        },\n        schema: {\n          props: {\n            labelWidth: 120,\n            labelPosition: 'left'\n          },\n          fields: [{\n            type: 'steps',\n            id: 'steps',\n            layout: [1, 1, 1],\n            props: {\n              titles: ['基本信息', '高级设置', '校验规则']\n            },\n            fields: [\n              {\n                property: 'name',\n                title: '名称',\n                type: 'string'\n              },\n              {\n                property: 'date',\n                title: '日期',\n                type: 'date'\n              },\n              {\n                property: 'integer',\n                title: '数值',\n                type: 'integer'\n              }\n            ]\n          }]\n        }\n      };\n    }\n  };\n<\/script>\n\n"),w=Object(r["createTextVNode"])("\n"),E=Object(r["defineComponent"])({setup:function(e){return function(e,t){var n=Object(r["resolveComponent"])("code-container"),o=Object(r["resolveComponent"])("demo-wrapper");return Object(r["openBlock"])(),Object(r["createElementBlock"])("div",h,[f,O,j,Object(r["createElementVNode"])("pre",null,[Object(r["createVNode"])(o,null,{code:Object(r["withCtx"])((function(){return[Object(r["createVNode"])(n,null,{default:Object(r["withCtx"])((function(){return[N]})),_:1})]})),default:Object(r["withCtx"])((function(){return[y,Object(r["createVNode"])(s),g,V]})),_:1})]),v,Object(r["createElementVNode"])("pre",null,[Object(r["createVNode"])(o,null,{code:Object(r["withCtx"])((function(){return[Object(r["createVNode"])(n,null,{default:Object(r["withCtx"])((function(){return[C]})),_:1})]})),default:Object(r["withCtx"])((function(){return[k,Object(r["createVNode"])(m),x,w]})),_:1})])])}}});const T=E;t["default"]=T}}]);
//# sourceMappingURL=chunk-2d0d3704.a8bdec91.js.map