(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0cbc5a"],{"4aa8":function(e,t,n){"use strict";n.r(t);var a=n("8bbf"),c=Object(a["createTextVNode"])("启用禁用"),l=Object(a["createTextVNode"])("编辑/禁止编辑");function o(e,t,n,o,r,i){var u=Object(a["resolveComponent"])("v-schema-form"),s=Object(a["resolveComponent"])("a-button");return Object(a["openBlock"])(),Object(a["createElementBlock"])("div",null,[Object(a["createVNode"])(u,{value:e.value,"onUpdate:value":t[0]||(t[0]=function(t){return e.value=t}),schema:e.schema,effects:e.effects},null,8,["value","schema","effects"]),Object(a["createVNode"])(s,{onClick:e.disableOrEnable},{default:Object(a["withCtx"])((function(){return[c]})),_:1},8,["onClick"]),Object(a["createVNode"])(s,{onClick:e.editableOrReadonly},{default:Object(a["withCtx"])((function(){return[l]})),_:1},8,["onClick"])])}var r=n("98ce"),i=Object(a["defineComponent"])({name:"Demo",setup:function(){var e=Object(a["reactive"])({props:{size:"small",labelWidth:"120px"},fields:[{array:!0,property:"cols",max:24,min:1,title:"栅格布局",type:r["e"].Integer}]}),t=Object(a["reactive"])({cols:[]}),n=Object(a["ref"])(null),c=Object(a["ref"])(!0),l=Object(a["ref"])(!0),o=function(e){n.value=e,e("cols").onFieldCreateOrChange((function(e){console.log(e)}))};Object(r["k"])();var i=function(){l.value=!l.value,n.value("name").editable(l.value)},u=function(){c.value=!c.value,c.value?n.value("name").enable():n.value("name").disable()};return{disableOrEnable:u,editableOrReadonly:i,effects:o,schema:e,value:t}},created:function(){Object(r["k"])()}}),u=n("6b0d"),s=n.n(u);const b=s()(i,[["render",o]]);var d=b,f={class:"markdown-body"},v=Object(a["createTextVNode"])(" <template> <div> <v-schema-form v-model:value=\"value\" :schema=\"schema\" :effects=\"effects\"/> <a-button @click=\"disableOrEnable\">启用禁用</a-button> <a-button @click=\"editableOrReadonly\">编辑/禁止编辑</a-button> </div> </template> <script lang=\"ts\"> import {defineComponent, reactive, ref, Ref} from 'vue'; import {EffectsContext} from '../../../../types'; import {FieldTypes, registerAntd} from '../../../schema-form'; export default defineComponent({ name: 'Demo', setup() { const schema = reactive({ props: { size: 'small', labelWidth: '120px' }, fields: [{ array: true, property: 'cols', max: 24, min: 1, title: '栅格布局', type: FieldTypes.Integer }] }); const value = reactive({ cols: [] }); const context: Ref<EffectsContext> = ref(null); const enable = ref(true); const editable = ref(true); const effects = ($: EffectsContext) => { context.value = $; $('cols').onFieldCreateOrChange((v) => { console.log(v); }); }; registerAntd(); const editableOrReadonly = () => { editable.value = !editable.value; context.value('name').editable(editable.value); }; const disableOrEnable = () => { enable.value = !enable.value; if (enable.value) { context.value('name').enable(); } else { context.value('name').disable(); } }; return { disableOrEnable, editableOrReadonly, effects, schema, value }; }, created() { registerAntd(); } }); <\/script> "),m=Object(a["defineComponent"])({setup:function(e){return function(e,t){var n=Object(a["resolveComponent"])("code-container"),c=Object(a["resolveComponent"])("demo-wrapper");return Object(a["openBlock"])(),Object(a["createElementBlock"])("div",f,[Object(a["createVNode"])(c,null,{code:Object(a["withCtx"])((function(){return[Object(a["createVNode"])(n,null,{default:Object(a["withCtx"])((function(){return[v]})),_:1})]})),default:Object(a["withCtx"])((function(){return[Object(a["createVNode"])(d)]})),_:1})])}}});const p=m;t["default"]=p}}]);
//# sourceMappingURL=chunk-2d0cbc5a.cbd4aba0.js.map