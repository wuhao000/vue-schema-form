(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c950d"],{"592e":function(e,t,o){"use strict";o.r(t);var n=o("8bbf"),l=Object(n["createElementVNode"])("h3",{class:"demo-h3"},"根据自定义组件的复杂解构",-1);function a(e,t,o,a,c,r){var u=Object(n["resolveComponent"])("v-schema-form"),i=Object(n["resolveComponent"])("a-layout-content"),s=Object(n["resolveComponent"])("a-layout");return Object(n["openBlock"])(),Object(n["createBlock"])(s,null,{default:Object(n["withCtx"])((function(){return[Object(n["createVNode"])(i,null,{default:Object(n["withCtx"])((function(){return[Object(n["createVNode"])(u,{value:a.value,"onUpdate:value":t[0]||(t[0]=function(e){return a.value=e}),components:a.components,props:e.props,schema:a.definition,class:"demo-form"},null,8,["value","components","props","schema"]),Object(n["createElementVNode"])("div",null,[l,Object(n["createVNode"])(u,{value:a.value2,"onUpdate:value":t[1]||(t[1]=function(e){return a.value2=e}),components:a.components,schema:a.definition2},null,8,["value","components","schema"])])]})),_:1})]})),_:1})}var c=o("98ce"),r=function(e){return Object(n["createVNode"])("div",null,[Object(n["createVNode"])("pre",null,[JSON.stringify(e.value)])])},u={name:"Demo",setup:function(){Object(c["k"])();var e=Object(n["ref"])(),t=[{value:"zhejiang",label:"浙江",isLeaf:!1,loading:!1,children:[{label:"杭州",value:"hz"},{label:"温州",value:"wz"}]},{value:"jiangsu",label:"江苏",isLeaf:!1,loading:!1,children:[{label:"南京",value:"nj",children:[{label:"鼓楼区",value:"gl"},{label:"玄武区",value:"xw"}]},{label:"苏州",value:"sz"}]}],o=Object(n["ref"])(!1),l=Object(n["ref"])(null);return{value2:e,complexValue:l,components:[{component:r,platforms:"desktop",forArray:!1,forDisplay:!1,types:"complex"}],options:t,dialogVisible:o,value:{start:new Date(2020,0,1),end:new Date},definition2:{fields:{button:{type:"button",title:"点击上传复杂数据",wrapperProps:{noTitle:!0},props:{action:function(e){e("#complex").onFieldCreateOrChange((function(e){l.value=e})).value({aa:{bb:{cc:123,dd:[333,444],ee:"abcde"}}})}}},"{aa:{bb:{cc:destructor1,dd:[destructor2,destructor3],ee}}}":{id:"complex",type:"complex",title:"复杂解构",required:!0}}},definition:Object(n["computed"])((function(){return{fields:{"[start, end]":{type:"daterange",title:"时间范围"},"[province,city,town]":{type:"cascader",title:"省市区",placeholder:"请选择",enum:t}}}}))}}},i=o("6b0d"),s=o.n(i);const d=s()(u,[["render",a]]);var p=d,m={class:"markdown-body"},b=Object(n["createElementVNode"])("h1",{id:"字段解构"},"字段解构",-1),f=Object(n["createElementVNode"])("blockquote",null,[Object(n["createElementVNode"])("p",null,"字段解构是一个非常强大的特性，它可以对组件生产的值做解构转换，使得快速贴合服务端数据结构要求，无需再做二次转换 字段解构主要是对 name 用 ES Deconstruction 语法做解构，需要注意的是，不支持...语法")],-1),v=Object(n["createElementVNode"])("h3",{id:"最常见的解构案例"},"最常见的解构案例",-1),j=Object(n["createElementVNode"])("blockquote",null,[Object(n["createElementVNode"])("p",null,"通常，我们使用日期范围组件的时候组件生产的值是一个数组，但是往往服务端都是以 startDate,endDate 的方式做存储，如果每次前端都花大量精力去转换的话，其实成本还是很高的。所以，我们可以借助字段解构，轻松解决该问题.")],-1),O=Object(n["createTextVNode"])(" <template> <a-layout> <a-layout-content> <v-schema-form v-model:value=\"value\" :components=\"components\" :props=\"props\" :schema=\"definition\" class=\"demo-form\"/> <div> <h3 class=\"demo-h3\">根据自定义组件的复杂解构</h3> <v-schema-form v-model:value=\"value2\" :components=\"components\" :schema=\"definition2\"></v-schema-form> </div> </a-layout-content> </a-layout> </template> <script lang=\"tsx\"> import {EffectsContext, SchemaFormComponentOptions} from '../../../../types'; import {computed, ref} from 'vue'; import {registerAntd} from '../../../schema-form'; const complex = (props) => { return <div> <pre> {JSON.stringify(props.value)} </pre> </div>; }; export default { name: 'Demo', setup() { registerAntd(); const value2 = ref<any>(); const options = [ { value: 'zhejiang', label: '浙江', isLeaf: false, loading: false, children: [{ label: '杭州', value: 'hz' }, { label: '温州', value: 'wz' }] }, { value: 'jiangsu', label: '江苏', isLeaf: false, loading: false, children: [{ label: '南京', value: 'nj', children: [{ label: '鼓楼区', value: 'gl' }, { label: '玄武区', value: 'xw' }] }, { label: '苏州', value: 'sz' }] }]; const dialogVisible = ref(false); const complexValue = ref<any>(null); return { value2, complexValue, components: [{ component: complex, platforms: 'desktop', forArray: false, forDisplay: false, types: 'complex' } as SchemaFormComponentOptions], options, dialogVisible, value: { start: new Date(2020, 0, 1), end: new Date() }, definition2: { fields: { button: { type: 'button', title: '点击上传复杂数据', wrapperProps: { noTitle: true }, props: { action: ($: EffectsContext) => { $('#complex').onFieldCreateOrChange((v) => { complexValue.value = v; }).value({ 'aa': { 'bb': { 'cc': 123, 'dd': [ 333, 444 ], 'ee': 'abcde' } } }); } } }, '{aa:{bb:{cc:destructor1,dd:[destructor2,destructor3],ee}}}': { id: 'complex', type: 'complex', title: '复杂解构', required: true } } }, definition: computed(() => { return { fields: { '[start, end]': { type: 'daterange', title: '时间范围' }, '[province,city,town]': { type: 'cascader', title: '省市区', placeholder: '请选择', enum: options } } }; }) }; } }; <\/script> "),h=Object(n["defineComponent"])({setup:function(e){return function(e,t){var o=Object(n["resolveComponent"])("code-container"),l=Object(n["resolveComponent"])("demo-wrapper");return Object(n["openBlock"])(),Object(n["createElementBlock"])("div",m,[b,f,v,j,Object(n["createVNode"])(l,null,{code:Object(n["withCtx"])((function(){return[Object(n["createVNode"])(o,null,{default:Object(n["withCtx"])((function(){return[O]})),_:1})]})),default:Object(n["withCtx"])((function(){return[Object(n["createVNode"])(p)]})),_:1})])}}});const y=h;t["default"]=y}}]);
//# sourceMappingURL=chunk-2d0c950d.82dc6e8f.js.map