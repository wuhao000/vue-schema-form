{"version":3,"sources":["webpack:///./src/generated/doc/fuzuoyonghanshu/comp0.vue","webpack:///./src/generated/doc/fuzuoyonghanshu/comp0.vue?38d1","webpack:///./src/generated/doc/fuzuoyonghanshu/index.vue","webpack:///./src/generated/doc/fuzuoyonghanshu/index.vue?0098"],"names":["setup","__props","schema","props","inline","fields","layout","type","s1","title","s2","effects","$","onFieldChange","value","_ctx","_cache","_component_v_schema_form","_component_a_layout_content","_component_a_layout","default","_","__exports__","_hoisted_1","class","_hoisted_2","id","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_component_code_container","_component_demo_wrapper","code","comp0"],"mappings":"qJAO4B,+BAAiB,CAC3CA,MAD2C,SACrCC,GAEN,iBAEA,IAAMC,EAAS,CACbC,MAAO,CAACC,QAAQ,GAChBC,OAAQ,CACNC,OAAQ,CACNC,KAAM,OACND,OAAQ,CAAC,EAAG,GACZD,OAAQ,CACNG,GAAI,CACFD,KAAM,SACNE,MAAO,MAETC,GAAI,CACFH,KAAM,SACNE,MAAO,UAMXE,EAAU,SAACC,GACfA,EAAE,MAAMC,eAAc,SAAAC,GACpBF,EAAE,MAAME,MAAMA,OAIpB,OAAO,SAACC,EAAUC,GAChB,IAAMC,EAA2B,8BAAkB,iBAC7CC,EAA8B,8BAAkB,oBAChDC,EAAsB,8BAAkB,YAE9C,OAAQ,yBAAc,yBAAaA,EAAqB,KAAM,CAC5DC,QAAS,sBAAS,iBAAM,CACtB,yBAAaF,EAA6B,KAAM,CAC9CE,QAAS,sBAAS,iBAAM,CACtB,yBAAaH,EAA0B,CACrCN,QAASA,EACTT,OAAQA,QAGZmB,EAAG,QAGPA,EAAG,QCnDP,MAAMC,EAAc,EAEL,QCFTC,EAAa,CAAEC,MAAO,iBACtBC,EAA0B,gCAAoB,KAAM,CAAEC,GAAI,SAAW,SAAU,GAC/EC,EAA0B,gCAAoB,aAAc,KAAM,CACzD,gCAAoB,IAAK,KAAM,2FAC1C,GACEC,EAA0B,gCAAoB,IAAK,KAAM,4KAA6K,GACtOC,EAA0B,gCAAoB,IAAK,KAAM,aAAc,GACvEC,EAA0B,gCAAoB,aAAc,KAAM,CACzD,gCAAoB,IAAK,KAAM,oCAC1C,GACEC,EAA0B,6BAAiB,MAC3CC,EAA0B,6BAAiB,MAC3CC,EAA0B,6BAAiB,81BAC3CC,EAA2B,6BAAiB,MAC5CC,EAA2B,+BAAmB,2hIAA4iI,IAIpkI,+BAAiB,CAC3CnC,MAD2C,SACrCC,GAGR,OAAO,SAACc,EAAUC,GAChB,IAAMoB,EAA4B,8BAAkB,kBAC9CC,EAA0B,8BAAkB,gBAElD,OAAQ,yBAAc,gCAAoB,MAAOd,EAAY,CAC3DE,EACAE,EACAC,EACAC,EACAC,EACA,gCAAoB,MAAO,KAAM,CAC/B,yBAAaO,EAAyB,KAAM,CAC1CC,KAAM,sBAAS,iBAAM,CACnB,yBAAaF,EAA2B,KAAM,CAC5ChB,QAAS,sBAAS,iBAAM,CACtBa,MAEFZ,EAAG,QAGPD,QAAS,sBAAS,iBAAM,CACtBW,EACA,yBAAaQ,GACbP,EACAE,MAEFb,EAAG,MAGPc,QCnDJ,MAAM,EAAc,EAEL","file":"js/chunk-2d0ced9c.be575d25.js","sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport {EffectsContext} from '../../../../types';\n  import {registerAntd} from '../../../schema-form';\n\n  \nexport default /*#__PURE__*/_defineComponent({\n  setup(__props) {\n\n  registerAntd();\n  \n  const schema = {\n    props: {inline: true},\n    fields: {\n      layout: {\n        type: 'grid',\n        layout: [6, 6],\n        fields: {\n          s1: {\n            type: 'string',\n            title: 'aa'\n          },\n          s2: {\n            type: 'string',\n            title: 'bb'\n          }\n        }\n      }\n    }\n  };\n  const effects = ($: EffectsContext) => {\n    $('s1').onFieldChange(value => {\n      $('s2').value(value);\n    });\n  }\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_v_schema_form = _resolveComponent(\"v-schema-form\")!\n  const _component_a_layout_content = _resolveComponent(\"a-layout-content\")!\n  const _component_a_layout = _resolveComponent(\"a-layout\")!\n\n  return (_openBlock(), _createBlock(_component_a_layout, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_a_layout_content, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_v_schema_form, {\n            effects: effects,\n            schema: schema\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}\n}\n\n})","import script from \"./comp0.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./comp0.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createVNode as _createVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"markdown-body\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", { id: \"副作用处理\" }, \"副作用处理\", -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"blockquote\", null, [\n  /*#__PURE__*/_createElementVNode(\"p\", null, \"表单副作用，也就是由表单字段的内部事件所产生的联动，校验，异步逻辑，如何更好的管理和维护副作用逻辑，恰好就是rxjs的最大优势，所以，本方案采用了rxjs来管理副作用逻辑\")\n], -1)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", null, \"表单的API中包含的effects即为表单的副作用函数，这个effects是一个功能极为强大的回调函数， 它接收了一个selector函数作为参数，我们可以用selector来选择表单内的任意一个或多个字段， 对其做状态修改，即便存在异步逻辑，也是可以很方便的在各种异步环境下对字段的状态做修改， 所以，我们的表单联动，是不限于时空的。\", -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", null, \"effects示例\", -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"blockquote\", null, [\n  /*#__PURE__*/_createElementVNode(\"p\", null, \"下面的例子是实现aa在值改变的时候将bb的值设置为aa的值。\")\n], -1)\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"\\n\")\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\"\\n\")\nconst _hoisted_9 = /*#__PURE__*/_createTextVNode(\"\\n  <template>\\n  <a-layout>\\n    <a-layout-content>\\n      <v-schema-form\\n          :effects=\\\"effects\\\"\\n          :schema=\\\"schema\\\">\\n      </v-schema-form>\\n    </a-layout-content>\\n  </a-layout>\\n</template>\\n<script lang=\\\"ts\\\" setup>\\n  import {EffectsContext} from '../../../types';\\n  import {registerAntd} from '../../schema-form';\\n\\n  registerAntd();\\n  \\n  const schema = {\\n    props: {inline: true},\\n    fields: {\\n      layout: {\\n        type: 'grid',\\n        layout: [6, 6],\\n        fields: {\\n          s1: {\\n            type: 'string',\\n            title: 'aa'\\n          },\\n          s2: {\\n            type: 'string',\\n            title: 'bb'\\n          }\\n        }\\n      }\\n    }\\n  };\\n  const effects = ($: EffectsContext) => {\\n    $('s1').onFieldChange(value => {\\n      $('s2').value(value);\\n    });\\n  }\\n</script>\\n\\n\")\nconst _hoisted_10 = /*#__PURE__*/_createTextVNode(\"\\n\")\nconst _hoisted_11 = /*#__PURE__*/_createStaticVNode(\"<h2 id=\\\"选择器操作\\\">选择器操作</h2><p>$函数接收一个或多个路径作为参数,返回一个 EffectsHandlers 对象， EffectsHandlers 对象具有以下方法，对匹配到的表单项进行操作：</p><h3 id=\\\"状态操作函数\\\">状态操作函数</h3><table><thead><tr><th>方法名</th><th>方法描述</th><th>方法参数</th><th>方法返回值</th></tr></thead><tbody><tr><td>disable</td><td>禁用表单项</td><td>disabled: boolean //是否禁用，默认值true</td><td>EffectsHandlers</td></tr><tr><td>enable</td><td>启用表单项</td><td>enable: boolean //是否启用，默认值true</td><td>EffectsHandlers</td></tr><tr><td>editable</td><td>设置匹配到的表单项是否可编辑</td><td>editable: boolean //是否可编辑</td><td>EffectsHandlers</td></tr><tr><td>hide</td><td>隐藏匹配到的表单项</td><td>hide: boolean //是否隐藏，默认值true</td><td>EffectsHandlers</td></tr><tr><td>required</td><td>设置匹配到的表单项的必填状态</td><td>required: boolean // 是否必填</td><td>EffectsHandlers</td></tr><tr><td>show</td><td>显示匹配到的表单项</td><td>-</td><td>EffectsHandlers</td></tr><tr><td>toggle</td><td>匹配到的表单项在显示与影藏之间切换</td><td>-</td><td>EffectsHandlers</td></tr></tbody></table><h3 id=\\\"事件函数\\\">事件函数</h3><table><thead><tr><th>方法名</th><th>方法描述</th><th>方法参数</th><th>方法返回值</th></tr></thead><tbody><tr><td>isEnabled</td><td>匹配到的表单项是否禁用状态</td><td>-</td><td>当匹配到多个表单项时，只有全部启用才返回true，反之返回false</td></tr><tr><td>onFieldBlur</td><td>当匹配的表单项失去焦点时的回调</td><td>-</td><td>EffectsHandlers</td></tr><tr><td>onFieldChange</td><td>当匹配的表单项的值发生变化时回调</td><td>value: 新的值<br> path: 发生变化的表单项的路径</td><td>EffectsHandlers</td></tr><tr><td>onFieldCreate</td><td>当表单项被创建时调用一次</td><td>value: 表单项的值<br> path: 表单项路径</td><td>EffectsHandlers</td></tr><tr><td>onFieldCreateOrChange</td><td>当表单项创建或者值发生变化时回调</td><td>-</td><td>EffectsHandlers</td></tr><tr><td>onFieldFocus</td><td>当匹配的表单项获取到焦点时回调</td><td>-</td><td>EffectsHandlers</td></tr><tr><td>subscribe</td><td>订阅事件</td><td>event: 事件名称（详细见<a href=\\\"#events\\\">事件</a>）,callback: 回调函数/(data) =&gt; any;</td><td></td></tr><tr><td>trigger</td><td>匹配到的表单项触发指定事件</td><td>event: string //触发的事件名称</td><td>EffectsHandlers</td></tr></tbody></table><h3 id=\\\"属性值事件函数\\\">属性/值事件函数</h3><table><thead><tr><th>方法名</th><th>方法描述</th><th>方法参数</th><th>方法返回值</th></tr></thead><tbody><tr><td>setDisplayValue</td><td>当匹配到的字段为非编辑模式时，设置指定的显示内容</td><td>displayValue: string,number,VNode //显示的内容</td><td></td></tr><tr><td>setEnum</td><td>为支持选项的表单项设置选项内容</td><td>options: 选项/array</td><td>EffectsHandlers</td></tr><tr><td>setFieldProps</td><td>为匹配的表单项设置属性</td><td>props: 属性对象/object/{属性名称: 属性值}/object</td><td>EffectsHandlers</td></tr><tr><td>setTitle</td><td>修改表单项的名称</td><td>string:新的表单项名称</td><td>EffectsHandlers</td></tr><tr><td>value</td><td>当不传参时表示获取匹配的表单项的值（只匹配一个表单项时直接返回该表单项的值，<br>匹配多个时返回多个表单项值组成的数组），当传递一个参数时，表示对匹配的表单项赋值</td><td>value: 要设置的值</td><td>当不传参时，匹配到的表单项的值</td></tr></tbody></table><h3 id=\\\"匹配操作函数\\\">匹配操作函数</h3><table><thead><tr><th>方法名</th><th>方法描述</th><th>方法参数</th><th>方法返回值</th><th>备注</th></tr></thead><tbody><tr><td>fields</td><td>获取匹配到的所有表单项</td><td>-</td><td>FieldDefinition[]</td><td></td></tr><tr><td>field</td><td>获取匹配到的唯一表单项，如果有多个，则返回null</td><td>-</td><td>FieldDefinition</td><td></td></tr><tr><td>paths</td><td>匹配到的所有表单项的路径（主要用于通配符匹配）</td><td>-</td><td>string[]</td><td></td></tr><tr><td>appendPath</td><td>在上一步的选择器上添加指定的子路径进行匹配</td><td>path: string //添加的子路径</td><td>EffectsHandlers</td><td>例如：$(&#39;a.b&#39;).appendPath(&#39;c&#39;) 等同于 $(&#39;a.b.c&#39;)</td></tr><tr><td>takePath</td><td>将路径按层级切割后取前面n层深度</td><td>n: number // 要获取的深度</td><td>EffectsHandlers</td><td>例如：$(&#39;a.b.c&#39;).takePath(2) 等同于 $(&#39;a.b&#39;)</td></tr></tbody></table><h2 id=\\\"effectscontext-上挂载的方法\\\">EffectsContext 上挂载的方法</h2><table><thead><tr><th>方法名</th><th>方法描述</th><th>方法参数</th><th>方法返回值</th></tr></thead><tbody><tr><td>validate</td><td>触发表单校验</td><td>;</td><td></td></tr><tr><td>submit</td><td>提交表单（主要在表单提交前触发校验，实际的提交请在自定义的回调中完成）</td><td>forceValidate: 是否强制校验</td><td>boolean <br> callback: 回调函数，value参数为表单当前那的值</td></tr><tr><td>getValue</td><td>获取表单当前的值</td><td>-</td><td></td></tr></tbody></table><h2 id=\\\"支持的事件\\\">支持的事件</h2><table><thead><tr><th>事件名称</th><th>事件说明</th></tr></thead><tbody><tr><td>fieldKeydown</td><td>keydown事件</td></tr><tr><td>fieldKeyup</td><td>keyup事件</td></tr><tr><td>fieldFocus</td><td>focus事件</td></tr><tr><td>fieldBlur</td><td>blur事件</td></tr></tbody></table>\", 14)\n\nimport  comp0 from './comp0.vue';\n\nexport default /*#__PURE__*/_defineComponent({\n  setup(__props) {\n\n  \nreturn (_ctx: any,_cache: any) => {\n  const _component_code_container = _resolveComponent(\"code-container\")!\n  const _component_demo_wrapper = _resolveComponent(\"demo-wrapper\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _hoisted_3,\n    _hoisted_4,\n    _hoisted_5,\n    _hoisted_6,\n    _createElementVNode(\"pre\", null, [\n      _createVNode(_component_demo_wrapper, null, {\n        code: _withCtx(() => [\n          _createVNode(_component_code_container, null, {\n            default: _withCtx(() => [\n              _hoisted_9\n            ]),\n            _: 1\n          })\n        ]),\n        default: _withCtx(() => [\n          _hoisted_7,\n          _createVNode(comp0),\n          _hoisted_8,\n          _hoisted_10\n        ]),\n        _: 1\n      })\n    ]),\n    _hoisted_11\n  ]))\n}\n}\n\n})","import script from \"./index.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./index.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"sourceRoot":""}