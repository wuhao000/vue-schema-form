(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d210fcb"],{b9db:function(e,t,r){"use strict";r.r(t);var n=r("8bbf");function o(e,t,r,o,a,c){var u=Object(n["resolveComponent"])("v-schema-form");return Object(n["openBlock"])(),Object(n["createBlock"])(u,{value:e.value,"onUpdate:value":t[0]||(t[0]=function(t){return e.value=t}),effects:e.effects,schema:e.schema},null,8,["value","effects","schema"])}var a=r("98ce"),c=Object(n["defineComponent"])({name:"Demo",setup:function(){Object(a["k"])();var e=Object(n["ref"])({string1:"bbb",string2:"eee",string3:"aaa"});return{effects:function(e){e("string1").hide(),e("selectCfg").hide()},schema:{fields:[{property:"string1",title:"string",type:"string"},{property:"string2",title:"string2",type:"text"},{property:"string3",title:"string3",type:{forArray:!1,forInput:!0,platform:"desktop",component:{name:"CustomField",props:{value:String},setup:function(e,t){var r=t.emit,o=Object(n["ref"])(e.value);return Object(n["watch"])((function(){return o.value}),(function(e){r("update:value",e)})),{localValue:o}},render:function(){var e=this;return Object(n["createVNode"])(Object(n["resolveComponent"])("a-input"),{value:e["localValue"],"onUpdate:value":function(t){return e["localValue"]=t}},null)}},getProps:function(){return{}}}}]},value:e}}}),u=r("6b0d"),l=r.n(u);const s=l()(c,[["render",o]]);var i=s,p={class:"markdown-body"},f=Object(n["createTextVNode"])(" <template> <v-schema-form v-model:value=\"value\" :effects=\"effects\" :schema=\"schema\"/> </template> <script lang=\"tsx\"> import {defineComponent, ref, watch} from 'vue'; import {EffectsContext, SchemaFormField} from '../../../../types'; import {registerAntd} from '../../../schema-form'; export default defineComponent({ name: 'Demo', setup() { registerAntd(); const value = ref({ string1: 'bbb', string2: 'eee', string3: 'aaa' }); return { effects: ($: EffectsContext) => { $('string1').hide(); $('selectCfg').hide(); }, schema: { fields: [ { property: 'string1', title: 'string', type: 'string' }, { property: 'string2', title: 'string2', type: 'text' }, { property: 'string3', title: 'string3', type: { forArray: false, forInput: true, platform: 'desktop', component: { name: 'CustomField', props: { value: String }, setup(props, {emit}) { const localValue = ref(props.value); watch(() => localValue.value, v => { emit('update:value', v); }); return { localValue }; }, render() { return <a-input v-model={[this['localValue'], 'value']}/>; } }, getProps: () => { return {}; } } } ] } as SchemaFormField, value }; } }); <\/script> "),m=Object(n["defineComponent"])({setup:function(e){return function(e,t){var r=Object(n["resolveComponent"])("code-container"),o=Object(n["resolveComponent"])("demo-wrapper");return Object(n["openBlock"])(),Object(n["createElementBlock"])("div",p,[Object(n["createVNode"])(o,null,{code:Object(n["withCtx"])((function(){return[Object(n["createVNode"])(r,null,{default:Object(n["withCtx"])((function(){return[f]})),_:1})]})),default:Object(n["withCtx"])((function(){return[Object(n["createVNode"])(i)]})),_:1})])}}});const d=m;t["default"]=d}}]);
//# sourceMappingURL=chunk-2d210fcb.2fdfb86f.js.map