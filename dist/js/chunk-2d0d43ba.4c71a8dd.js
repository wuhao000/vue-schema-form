(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0d43ba"],{"5fc6":function(e,n,t){"use strict";t.r(n);var o=t("8bbf"),l=Object(o["createElementVNode"])("h3",{class:"demo-h3"},"根据自定义组件的复杂解构",-1);function a(e,n,t,a,c,r){var u=Object(o["resolveComponent"])("v-schema-form"),i=Object(o["resolveComponent"])("show-value"),s=Object(o["resolveComponent"])("a-layout-content"),d=Object(o["resolveComponent"])("a-layout");return Object(o["openBlock"])(),Object(o["createBlock"])(d,null,{default:Object(o["withCtx"])((function(){return[Object(o["createVNode"])(s,null,{default:Object(o["withCtx"])((function(){return[Object(o["createVNode"])(u,{value:a.value,"onUpdate:value":n[0]||(n[0]=function(e){return a.value=e}),components:a.components,props:e.props,schema:a.definition,class:"demo-form"},null,8,["value","components","props","schema"]),Object(o["createVNode"])(i,{title:"查看结果",value:a.value},null,8,["value"]),Object(o["createElementVNode"])("div",null,[l,Object(o["createVNode"])(u,{value:a.value2,"onUpdate:value":n[1]||(n[1]=function(e){return a.value2=e}),components:a.components,schema:a.definition2},null,8,["value","components","schema"])])]})),_:1})]})),_:1})}var c=t("98ce"),r=t("772a"),u=function(e){return Object(o["createVNode"])("div",null,[Object(o["createVNode"])("pre",null,[JSON.stringify(e.value)])])},i={name:"Demo",components:{ShowValue:r["a"]},setup:function(){Object(c["k"])();var e=Object(o["ref"])(),n=[{value:"zhejiang",label:"浙江",isLeaf:!1,loading:!1,children:[{label:"杭州",value:"hz"},{label:"温州",value:"wz"}]},{value:"jiangsu",label:"江苏",isLeaf:!1,loading:!1,children:[{label:"南京",value:"nj",children:[{label:"鼓楼区",value:"gl"},{label:"玄武区",value:"xw"}]},{label:"苏州",value:"sz"}]}],t=Object(o["ref"])(!1),l=Object(o["ref"])(null);return{value2:e,complexValue:l,components:[{component:u,platforms:"desktop",mode:"render",types:"complex"}],options:n,dialogVisible:t,value:{},definition2:{fields:{button:{type:"button",title:"点击上传复杂数据",wrapperProps:{noTitle:!0},events:{onClick:function(e){e("#complex").onFieldCreateOrChange((function(e){l.value=e})).value({aa:{bb:{cc:123,dd:[333,444],ee:"abcde"}}})}}},"{aa:{bb:{cc:destructor1,dd:[destructor2,destructor3],ee}}}":{id:"complex",type:"complex",title:"复杂解构",required:!0}}},definition:Object(o["computed"])((function(){return{fields:{"[start, end]":{type:"daterange",title:"时间范围"},"[province,city,town]":{type:"cascader",title:"省市区",placeholder:"请选择",enum:n}}}}))}}},s=t("6b0d"),d=t.n(s);const p=d()(i,[["render",a]]);var m=p,v={class:"markdown-body"},b=Object(o["createElementVNode"])("h1",{id:"字段解构"},"字段解构",-1),f=Object(o["createElementVNode"])("p",null,"字段解构是一个非常强大的特性，它可以对组件生产的值做解构转换，使得快速贴合服务端数据结构要求，无需再做二次转换 字段解构主要是对 property 用 ES Deconstruction 语法做解构，需要注意的是，不支持...语法",-1),h=Object(o["createTextVNode"])("\n"),j=Object(o["createTextVNode"])("\n"),O=Object(o["createTextVNode"])("\n  \n<template>\n  <a-layout>\n    <a-layout-content>\n      <v-schema-form\n          v-model:value=\"value\"\n          :components=\"components\"\n          :props=\"props\"\n          :schema=\"definition\"\n          class=\"demo-form\"/>\n      <show-value \n          title=\"查看结果\"\n          :value=\"value\"/>\n      <div>\n        <h3 class=\"demo-h3\">根据自定义组件的复杂解构</h3>\n        <v-schema-form\n            v-model:value=\"value2\"\n            :components=\"components\"\n            :schema=\"definition2\"></v-schema-form>\n      </div>\n    </a-layout-content>\n  </a-layout>\n</template>\n<script lang=\"tsx\">\n  import {EffectsContext, SchemaFormComponentOptions} from '../../../types';\n  import {computed, ref} from 'vue';\n  import {registerAntd} from '../../schema-form';\n  import ShowValue from '../../views/show-value.vue';\n  const complex = (props) => {\n    return <div>\n      <pre>\n        {JSON.stringify(props.value)}\n      </pre>\n    </div>;\n  };\n  export default {\n    name: 'Demo',\n    components: {ShowValue},\n    setup() {\n      registerAntd();\n      const value2 = ref<any>();\n      const options = [\n        {\n          value: 'zhejiang',\n          label: '浙江',\n          isLeaf: false,\n          loading: false,\n          children: [{\n            label: '杭州', value: 'hz'\n          }, {\n            label: '温州', value: 'wz'\n          }]\n        }, {\n          value: 'jiangsu',\n          label: '江苏',\n          isLeaf: false,\n          loading: false,\n          children: [{\n            label: '南京', value: 'nj',\n            children: [{\n              label: '鼓楼区', value: 'gl'\n            }, {\n              label: '玄武区', value: 'xw'\n            }]\n          }, {\n            label: '苏州', value: 'sz'\n          }]\n        }];\n      const dialogVisible = ref(false);\n      const complexValue = ref<any>(null);\n      return {\n        value2,\n        complexValue,\n        components: [{\n          component: complex,\n          platforms: 'desktop',\n          mode: 'render',\n          types: 'complex'\n        } as SchemaFormComponentOptions],\n        options,\n        dialogVisible,\n        value: {},\n        definition2: {\n          fields: {\n            button: {\n              type: 'button',\n              title: '点击上传复杂数据',\n              wrapperProps: {\n                noTitle: true\n              },\n              events: {\n                onClick: ($: EffectsContext) => {\n                  $('#complex').onFieldCreateOrChange((v) => {\n                    complexValue.value = v;\n                  }).value({\n                    'aa': {\n                      'bb': {\n                        'cc': 123,\n                        'dd': [\n                          333,\n                          444\n                        ],\n                        'ee': 'abcde'\n                      }\n                    }\n                  });\n                }\n              }\n            },\n            '{aa:{bb:{cc:destructor1,dd:[destructor2,destructor3],ee}}}': {\n              id: 'complex',\n              type: 'complex',\n              title: '复杂解构',\n              required: true\n            }\n          }\n        },\n        definition: computed(() => {\n          return {\n            fields: {\n              '[start, end]': {\n                type: 'daterange',\n                title: '时间范围'\n              },\n              '[province,city,town]': {\n                type: 'cascader',\n                title: '省市区',\n                placeholder: '请选择',\n                enum: options\n              }\n            }\n          };\n        })\n      };\n    }\n  };\n<\/script>\n\n"),x=Object(o["createTextVNode"])("\n"),w=Object(o["defineComponent"])({setup:function(e){return function(e,n){var t=Object(o["resolveComponent"])("code-container"),l=Object(o["resolveComponent"])("demo-wrapper");return Object(o["openBlock"])(),Object(o["createElementBlock"])("div",v,[b,f,Object(o["createElementVNode"])("pre",null,[Object(o["createVNode"])(l,null,{code:Object(o["withCtx"])((function(){return[Object(o["createVNode"])(t,null,{default:Object(o["withCtx"])((function(){return[O]})),_:1})]})),default:Object(o["withCtx"])((function(){return[h,Object(o["createVNode"])(m),j,x]})),_:1})])])}}});const V=w;n["default"]=V}}]);
//# sourceMappingURL=chunk-2d0d43ba.4c71a8dd.js.map