(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0ac3a2"],{1948:function(e,t,n){"use strict";n.r(t);var c=n("8bbf"),o={class:"markdown-body"},r=Object(c["createElementVNode"])("h1",{id:"form-schema-扩展规范"},"Form Schema 扩展规范",-1),d=Object(c["createElementVNode"])("h2",{id:"背景"},"背景",-1),l=Object(c["createElementVNode"])("p",null,[Object(c["createTextVNode"])("通常使用type来描述组件类型，但是组件类型我们通常命名为数据的类型，如果一个数据类型想要使用不同的输入组件时，可以通过"),Object(c["createElementVNode"])("code",null,"xType"),Object(c["createTextVNode"])("来指定")],-1),a=Object(c["createElementVNode"])("p",null,[Object(c["createTextVNode"])("例如："),Object(c["createElementVNode"])("code",null,"boolean"),Object(c["createTextVNode"])(" 类型通常对应的是"),Object(c["createElementVNode"])("code",null,"Switch"),Object(c["createTextVNode"])("组件，但是如果想要使用复选框来作为输入组件时，就可以按如下内容配置：")],-1),b=Object(c["createTextVNode"])('\n  {\n  "type": "boolean",\n  "xType": "checkbox"\n}\n'),j=Object(c["createElementVNode"])("h2",{id:"表单校验描述"},"表单校验描述",-1),O=Object(c["createElementVNode"])("p",null,[Object(c["createTextVNode"])("在表单场景中，校验是必不可少的，同样，为了描述字段的校验规则，我们使用"),Object(c["createElementVNode"])("code",null,"rules"),Object(c["createTextVNode"])("来描述字段的校验规则：")],-1),u=Object(c["createTextVNode"])('\n  {\n  "type": "string",\n  "rules": [\n    {\n      "pattern": "\\\\d+",\n      "message": "必须是数字"\n    }\n  ]\n}\n'),p=Object(c["createElementVNode"])("h2",{id:"表单组件属性描述"},"表单组件属性描述",-1),m=Object(c["createElementVNode"])("p",null,[Object(c["createTextVNode"])("每个表单组件其实都会有自己的一套属性，有控制交互行为的，也有控制样式的，所以我们使用 "),Object(c["createElementVNode"])("code",null,"props"),Object(c["createTextVNode"])(" 来给传递给具体的表单 UI 组件：")],-1),N=Object(c["createTextVNode"])('\n  {\n  "type": "select",\n  "props": {\n    "multiple": true\n  }\n}\n'),V=Object(c["createElementVNode"])("h2",{id:"表单字段顺序描述"},"表单字段顺序描述",-1),s=Object(c["createElementVNode"])("p",null,"因为 JSON Schema 描述对象型数据结构同样是使用对象结构来描述，但是想要映射到 UI 界面上，就会存在一个显示顺序的问题，对象 key 是无序的，所以，我们就扩展了 x-index 来控制字段顺序：",-1),i=Object(c["createTextVNode"])('\n  {\n  "type": "object",\n  "properties": {\n    "aa": {\n      "type": "string",\n      "x-rules": [\n        {\n          "pattern": "\\\\d+",\n          "message": "必须是数字"\n        }\n      ],\n      "x-props": {\n        "multiple": true\n      },\n      "x-index": 1\n    },\n    "bb": {\n      "type": "string",\n      "x-rules": [\n        {\n          "pattern": "\\\\d+",\n          "message": "必须是数字"\n        }\n      ],\n      "x-props": {\n        "multiple": true\n      },\n      "x-index": 0\n    }\n  }\n}\n');function x(e,t){var n=Object(c["resolveComponent"])("code-editor");return Object(c["openBlock"])(),Object(c["createElementBlock"])("div",o,[r,d,l,a,Object(c["createElementVNode"])("pre",null,[Object(c["createVNode"])(n,{mode:"json"},{default:Object(c["withCtx"])((function(){return[b]})),_:1})]),j,O,Object(c["createElementVNode"])("pre",null,[Object(c["createVNode"])(n,{mode:"json"},{default:Object(c["withCtx"])((function(){return[u]})),_:1})]),p,m,Object(c["createElementVNode"])("pre",null,[Object(c["createVNode"])(n,{mode:"json"},{default:Object(c["withCtx"])((function(){return[N]})),_:1})]),V,s,Object(c["createElementVNode"])("pre",null,[Object(c["createVNode"])(n,{mode:"json"},{default:Object(c["withCtx"])((function(){return[i]})),_:1})])])}var E=n("6b0d"),h=n.n(E);const T={},f=h()(T,[["render",x]]);t["default"]=f}}]);
//# sourceMappingURL=chunk-2d0ac3a2.3b170332.js.map